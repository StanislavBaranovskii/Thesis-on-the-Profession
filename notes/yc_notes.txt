#yc components update

#yc config list

#ssh-keygen -t ed25519

#yc compute instance list

WEB_VM_NAME1=WEB_VM1
WEB_VM_NAME2=WEB_VM2

yc compute instance get $WEB_VM_NAME1
if [ $? -ne 0 ]; then yc compute instance create   --name $WEB_VM_NAME1   --zone ru-central1-a   --network-interface subnet-name=default-ru-central1-a,nat-ip-version=ipv4  --memory 2GB  --cores 2  --core-fraction 20  --hostname centos01  --preemptible   --create-boot-disk image-folder-id=standard-images,size=10,type=network-hdd,image-family=centos-7   --ssh-key ~/.ssh/id_ed25519.pub; fi



yc compute instance create   --name vm-debian   --zone ru-central1-a   --network-interface subnet-name=default-ru-central1-a,nat-ip-version=ipv4  --memory 4GB  --cores 2  --core-fraction 20  --hostname debian01  --preemptible   --create-boot-disk image-folder-id=standard-images,size=20,type=network-hdd,image-family=debian-11   --ssh-key ~/.ssh/id_ed25519.pub

#IP-адрес ВМ
yc compute instance get vm-debian |grep -iE "^[ ]{6,8}address: " |sed 's/address://' |xargs

#Подключение к ВМ
ssh yc-user@130.193.38.21

#Закидываем файлы на ВМ
#tar czf - Thesis-on-the-Profession/WWW/index.nginx-debian.html | ssh yc-user@130.193.38.21 sudo tar -xvzf -C /var/www/html/index.nginx-debian.html
#tar czf - Thesis-on-the-Profession/WWW/default | ssh yc-user@130.193.38.21 sudo tar -xvzf -C /etc/nginx/sites-enabled/default
scp ~/Thesis-on-the-Profession/WWW/index.nginx-debian.html yc-user@$IP_WEB_VM1:/tmp/
scp ~/Thesis-on-the-Profession/WWW/default yc-user@$IP_WEB_VM1:/tmp/

ansible -b all -m shell -a 'mv -f /tmp/index.nginx-debian.html /var/www/html/'
ansible -b all -m shell -a 'mv -f /tmp/default /etc/nginx/sites-enabled/'
ansible -b all -m shell -a 'systemctl restart nginx'  #рестарт nginx

#Забрать файлы с ВМ, если что, можно
scp yc-user@130.193.38.21:/etc/nginx/sites-enabled/default Thesis-on-the-Profession/WWW/
scp yc-user@130.193.38.21:/var/www/html/index.nginx-debian.html Thesis-on-the-Profession/WWW/


ansible -i hosts all -m ping -u yc-user
ansible all -m ping
ansible -b all -m shell -a 'apt update'
ansible-playbook my.yml


####################################################
#Target group
#
yc vpc subnet list
yc compute instance list

yc alb target-group create project-web-target-group --description="ALB:Целевая группа" --target subnet-name=default-ru-central1-a,ip-address=10.128.0.11 --target subnet-name=default-ru-central1-b,ip-address=10.129.0.11

yc alb target-group list
yc alb target-group get web-target-group
yc alb target-group delete web-target-group

####################################################
#Backend group
#
yc alb target-group list

yc alb backend-group create project-web-backend-group --description="ALB:Группа бэкендов"

yc alb backend-group add-http-backend   --backend-group-name=project-web-backend-group   --name backend1   --weight 1   --port 80   --target-group-id ds797cqi0j37c051a599   --panic-threshold 90   --http-healthcheck port=80,healthy-threshold=10,unhealthy-threshold=15,timeout=10s,interval=2s,path=/

yc alb backend-group add-http-backend project-web-backend-group --name project-backend --target-group-name project-web-target-group --http-healthcheck port=80,path=/

yc alb backend-group add-http-backend backend   --backend-group-name=project-web-backend-group   --name backend1    --port 80   --target-group-id ds776k6rgm6ku0uhmcjb   --http-healthcheck port=80,timeout=10s,interval=2s,path=/

yc alb backend-group list
yc alb backend-group delete web-backend-group

###################################################
#HTTP routers
#
yc alb http-router create --name project-http-router --description "ALB:http-router"

#Добавляем виртуальный хост
yc alb virtual-host create project-vhost --http-router-name project-http-router

#Добавляем маршрут
yc application-load-balancer virtual-host append-http-route project-route --http-router-name project-http-router --virtual-host-name project-vhost --prefix-path-match / --backend-group-name project-web-backend-group

yc alb http-router list
yc application-load-balancer virtual-host list --http-router-name project-web-http-router

yc alb http-router list

##################################################
#load balancer 
#
yc vpc network list

yc alb load-balancer create --name project-alb --description ALB --network-name default --location subnet-name=default-ru-central1-a,zone=ru-central1-a  --location subnet-name=default-ru-central1-b,zone=ru-central1-b

# Добавить обработчик с http router
yc alb load-balancer add-listener --name project-alb --listener-name alb-listener --external-ipv4-endpoint port=80 --http-router-name project-web-http-router

yc alb load-balancer create my-balancer   --network-name default   --location subnet-name=default-ru-central1-a,zone=ru-central1-a  --location subnet-name=default-ru-central1-b,zone=ru-central1-b

yc alb load-balancer list

yc alb load-balancer autoscale --help
yc alb load-balancer logging --help


#yc alb load-balancer delete <ID or name of the load balancer>
#yc alb virtual-host delete <virtual_host_name> 
#yc alb http-router delete <Имя>
#yc alb backend-group delete web-backend-group
#yc alb target-group delete <Имя_группы>
#yc compute instance stop $WEB_VM_NAME1
#yc compute instance delete $WEB_VM_NAME1



##################################################################################
#Docker

yc container registry list
yc container registry create --name my-reg
yc container registry get my-reg

yc container registry delete my-reg



yc container image list
yc container image scan <ID Docker-образа>
yc container image list-vulnerabilities --scan-result-id=<ID результатов сканирования>


yc container registry create --name my-reg
sudo docker build .   -t cr.yandex/my-reg/ubuntu:hello

docker image list
docker tag alpine cr.yandex/crp12jhlkptdfuvv0qcs/ubuntu:hello
#docker tag ubuntu cr.yandex/crp12jhlkptdfuvv0qcs/ubuntu:hello
yc container image list

##################################################################################
##################################################################################
#yc
#Облако
yc resource-manager cloud --help
yc resource-manager cloud list
yc resource-manager cloud get --id b1g5d1h1bstlaq9so8fs


#Каталог проекта - при создании каталога создается и VPC: сеть (network) с именим default и три подсети (subnet) default-ru-central1-a/b/c с именами ru-central1-a/b/c
yc resource-manager folder --help #управление каталогами проектов
yc resource-manager folder list
yc resource-manager folder create --name thesis-on-the-profession --description "Проект дипломной работы"
yc resource-manager folder get --name thesis-on-the-profession


yc vpc --help
yc vpc network --help
yc vpc network list
yc vpc subnet --help
yc vpc subnet list
yc vpc address --help
yc vpc address list #список используемых/занятых IP
yc vpc address get --id e9bv98v53akur71255t6

https://cloud.yandex.ru/docs/getting-started/individuals/configure-network



#################################################################################
# Отвязываем от ВМ публичный IP-адрес
yc compute instance remove-one-to-one-nat --name=<имя_ВМ> --network-interface-index=0


#################################################################################
# Создание группы безопастности для фильтрации трафика
yc vpc security-group create \
  --name test-sg-cli \
  --rule "direction=ingress,port=443,protocol=tcp,v4-cidrs=[10.0.0.0/24]" \
  --network-id c645mh47vscba1d64tbs
  


##################################
#Сервисный аккаунт

yc iam service-account --help #управление сервисным аккаунтом
yc iam service-account list
yc iam service-account create sa-terraform --async --description "Для развертывания инфраструктуры с помощью Terraform"
yc iam service-account list
yc iam service-account delete sa-terraform

роли
yc iam role list
yc iam user-account get baranovsky.stanis@yandex.ru #Узнаём ID аккаунта
yc iam service-account get sa-terraform #Узнаём ID аккаунта

yc resource-manager folder add-access-binding <ID folder> \
  --role editor \
  --subject userAccount: <ID аккаунта>

yc resource-manager folder remove-access-binding --id b1gadaampg6bbldf60up   --role admin   --subject serviceAccount:aje4d4ojr7nccjdudimj
yc resource-manager folder add-access-binding b1gffumnvmraa0eon2o3   --role editor   --subject serviceAccount:aje76icm2mqfijvu0c5s
yc resource-manager folder add-access-binding --id b1gadaampg6bbldf60up   --role alb.editor   --subject serviceAccount:aje4d4ojr7nccjdudimj

yc iam key create --service-account-name sa-terraform --output key.json


