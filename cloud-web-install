#!/bin/bash
#

#ssh-keygen -t ed25519

#yc compute instance list

#
# Запускать после разворачивания LOGS (elk) и перед MONITORING  - (LOGS/ELK -> WEB -> MONITORING)
#

WEB_VM1_NAME=vm-web1
WEB_VM2_NAME=vm-web2

ZONE=ru-central1-a

echo [web] > ~/Thesis-on-the-Profession/ansible/hosts

for VM_NAME in $WEB_VM1_NAME $WEB_VM2_NAME
do
    yc compute instance get $VM_NAME &>/dev/null
    if [ $? -ne 0 ]; then
        echo "ВМ $VM_NAME не найдена. Создаём"
        #yc compute instance create   --name $VM_NAME   --zone $ZONE   --network-interface subnet-name=default-$ZONE,nat-ip-version=ipv4  --memory 2GB  --cores 2  --core-fraction 20  --hostname centos-$VM_NAME  --preemptible   --create-boot-disk image-folder-id=standard-images,size=10,type=network-hdd,image-family=centos-7   --ssh-key ~/.ssh/id_ed25519.pub >/dev/null
        yc compute instance create   --name $VM_NAME   --zone $ZONE   --network-interface subnet-name=default-$ZONE,nat-ip-version=ipv4  --memory 4GB  --cores 2  --core-fraction 20  --hostname debian-$VM_NAME  --preemptible   --create-boot-disk image-folder-id=standard-images,size=20,type=network-hdd,image-family=debian-11   --ssh-key ~/.ssh/id_ed25519.pub >/dev/null
        if [ $? -ne 0 ]; then echo "ОШИБКА. ВМ $VM_NAME не создана"; fi 
    else
        echo "ВМ $VM_NAME уже существует"
    fi

    VM_IP=$(yc compute instance get $VM_NAME |grep -iE "^[ ]{8}address: " |sed 's/address://' |xargs)
    echo "$VM_NAME ansible_host=$VM_IP ansible_connection=ssh ansible_ssh_user=yc-user" >> ~/Thesis-on-the-Profession/ansible/hosts
    ZONE=ru-central1-b
done



sleep 30s

IP_WEB1=$(yc compute instance get $WEB_VM1_NAME |grep -iE "^[ ]{8}address: " |sed 's/address://' |xargs)
IP_WEB2=$(yc compute instance get $WEB_VM2_NAME |grep -iE "^[ ]{8}address: " |sed 's/address://' |xargs)


echo "global:
  scrape_interval: 15s
  evaluation_interval: 15s

alerting:
  alertmanagers:
    - static_configs:
        - targets:

rule_files:

scrape_configs:
  - job_name: \"prometheus\"
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090', 'localhost:9100']

  - job_name: \"web1\"
    scrape_interval: 5s
    static_configs:
      - targets: ['$IP_WEB1:9100', '$IP_WEB1:4040']

  - job_name: \"web2\"
    scrape_interval: 5s
    static_configs:
      - targets: ['$IP_WEB2:9100', '$IP_WEB2:4040']
" > ~/Thesis-on-the-Profession/monitoring/prometheus.yml

    

cd ~/Thesis-on-the-Profession/ansible
ansible-playbook web.yaml

#sleep 1s

#tar czf - ~/Thesis-on-the-Profession/web/index.nginx-debian.html | ssh yc-user@$IP_WEB_VM1 sudo tar -xvzf -C /var/web/html/index.nginx-debian.html
#scp ~/Thesis-on-the-Profession/web/index.nginx-debian.html yc-user@$IP_WEB_VM1:/tmp/

#tar czf - ~/Thesis-on-the-Profession/web/default | ssh yc-user@$IP_WEB_VM1 sudo tar -xvzf -C /etc/nginx/sites-enabled/default
#scp ~/Thesis-on-the-Profession/web/default yc-user@$IP_WEB_VM1:/tmp/

#sleep 1s

#ansible -b web -m shell -a 'mv -f /tmp/index.nginx-debian.html /var/web/html/'
#ansible -b web -m shell -a 'mv -f /tmp/default /etc/nginx/sites-enabled/'
#ansible -b web -m shell -a 'systemctl restart nginx'

