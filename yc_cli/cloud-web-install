#!/bin/bash
#

#if not exist ~/.ssh/id_ed25519.pub   ssh-keygen -t ed25519

#yc compute instance list


#
# Запускать после разворачивания LOGS (elk) и перед MONITORING  - (LOGS/ELK -> WEB -> MONITORING)
#

WEB_VM1_NAME=vm-web1
WEB_VM2_NAME=vm-web2

ZONE=ru-central1-a
IP_INT_WEB1=10.128.0.11
IP_INT_WEB2=10.129.0.11

CPU_CORE=2
MEMORY_SIZE=1GB
DISK_SIZE=3 #GB

#Перезаписываем содержимое файла host до [web]
echo "$(cat ~/Thesis-on-the-Profession/ansible/hosts |awk '/\[web\]/{exit 0}{print $0}')" > ~/Thesis-on-the-Profession/ansible/hosts
echo [web] >> ~/Thesis-on-the-Profession/ansible/hosts
VM_INT_IP=$IP_INT_WEB1
for VM_NAME in $WEB_VM1_NAME $WEB_VM2_NAME
do
    yc compute instance get $VM_NAME &>/dev/null
    if [ $? -ne 0 ]; then
        echo "ВМ $VM_NAME не найдена. Создаём"
        #yc compute instance create   --name $VM_NAME   --zone $ZONE   --network-interface subnet-name=default-$ZONE,nat-ip-version=ipv4  --memory 2GB  --cores $CPU_CORE  --core-fraction 20  --hostname centos-$VM_NAME  --preemptible   --create-boot-disk image-folder-id=standard-images,size=10,type=network-hdd,image-family=centos-7   --ssh-key ~/.ssh/id_ed25519.pub   --async >/dev/null
        yc compute instance create   --name $VM_NAME   --zone $ZONE   --network-interface subnet-name=default-$ZONE,nat-ip-version=ipv4,address=$VM_INT_IP  --memory $MEMORY_SIZE  --cores $CPU_CORE  --core-fraction 20  --hostname debian-$VM_NAME  --preemptible   --create-boot-disk image-folder-id=standard-images,size=$DISK_SIZE,type=network-hdd,image-family=debian-11   --ssh-key ~/.ssh/id_ed25519.pub   --async >/dev/null
        if [ $? -ne 0 ]; then echo "ОШИБКА. ВМ $VM_NAME не создана"; exit 1; fi 
    else
        echo "ВМ $VM_NAME уже существует"
    fi
    ZONE=ru-central1-b
    VM_INT_IP=$IP_INT_WEB2
done

#Ожидаем публикации IP создаваемых ВМ
echo "Ожидаем публикации IP создаваемых ВМ.."
for VM_NAME in $WEB_VM1_NAME $WEB_VM2_NAME
do
    VM_IP=""
    until [ -n "$VM_IP" ]
    do
        VM_IP=$(yc compute instance get $VM_NAME |grep -iE "^[ ]{8}address: " |sed 's/address://' |xargs)
        if [ -n "$VM_IP" ]; then
            echo "$VM_NAME ansible_host=$VM_IP ansible_connection=ssh ansible_ssh_user=yc-user" >> ~/Thesis-on-the-Profession/ansible/hosts
            if [ "$VM_NAME" = "$WEB_VM1_NAME" ]; then IP_WEB1=$VM_IP; fi
            if [ "$VM_NAME" = "$WEB_VM2_NAME" ]; then IP_WEB2=$VM_IP; fi
        fi
        sleep 2
    done
done

yc compute instance list

#Редактируем html файл index.nginx-debian.html
echo "$(cat ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian.html |awk '/http:\/\/localhost:80\//{exit 0}{print $0}')" > ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian-web1.html
cp -f ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian-web1.html ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian-web2.html

echo "<p><b><center><a href=\"http://$IP_WEB2:80/\">Switch to another WEB server</a></center></b></p>
<p><em>#############################################################</em></p>

<p><u>IP Address Nginx Server:</u> <b><font size=\"+2\" color=\"#ff0000\"><!--#echo var=\"SERVER_ADDR\"--></font></b></br>
<u>Name Nginx Server:</u> <b><font size=\"+2\" color=\"#ff0000\"><!--#echo var=\"HOSTNAME\"--></font></b></p>
<p><em><center><!--#echo var=\"DATE_LOCAL\"--></center></em></p>


</body>
</html>
" >> ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian-web1.html

echo "<p><b><center><a href=\"http://$IP_WEB1:80/\">Switch to another WEB server</a></center></b></p>
<p><em>#############################################################</em></p>

<p><u>IP Address Nginx Server:</u> <b><font size=\"+2\" color=\"#ff0000\"><!--#echo var=\"SERVER_ADDR\"--></font></b></br>
<u>Name Nginx Server:</u> <b><font size=\"+2\" color=\"#ff0000\"><!--#echo var=\"HOSTNAME\"--></font></b></p>
<p><em><center><!--#echo var=\"DATE_LOCAL\"--></center></em></p>


</body>
</html>
" >> ~/Thesis-on-the-Profession/web/WWW/index.nginx-debian-web2.html

#Перезаписываем конфигурационный файл prometheus.yml
echo "global:
  scrape_interval: 15s
  evaluation_interval: 15s

alerting:
  alertmanagers:
    - static_configs:
        - targets:

rule_files:

scrape_configs:

  - job_name: \"web1\"
    scrape_interval: 8s
    static_configs:
      - targets: ['$IP_INT_WEB1:9100', '$IP_INT_WEB1:4040']

  - job_name: \"web2\"
    scrape_interval: 8s
    static_configs:
      - targets: ['$IP_INT_WEB2:9100', '$IP_INT_WEB2:4040']
" > ~/Thesis-on-the-Profession/monitoring/prometheus/prometheus.yml

    
cd ~/Thesis-on-the-Profession/ansible
#ansible-playbook web.yaml --extra-vars="name_web1=$WEB_VM1_NAME ip_int_web1=$IP_INT_WEB1 name_web2=$WEB_VM2_NAME ip_int_web2=$IP_INT_WEB2"
ansible-playbook web.yaml
if [ $? -ne 0 ]; then echo "ОШИБКА в $0. Ansible playbook ошибка выполнения сценария"; exit 1; fi




